/*
 * This program is part of the OpenLMIS logistics management information system platform software.
 * Copyright © 2013 VillageReach
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *  
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License along with this program.  If not, see http://www.gnu.org/licenses.  For additional information contact info@OpenLMIS.org. 
 */

apply plugin: 'idea'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'properties'
apply plugin: 'sonar-runner'


idea.project.languageLevel = '1.7'
idea.project.jdkName = '1.7'

repositories {
    jcenter()
}
buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath "net.saliman:gradle-cobertura-plugin:2.2.7"
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.8'
    classpath "net.saliman:gradle-properties-plugin:1.4.2"
  }

}
sonarRunner {
    sonarProperties {
	  property "sonar.host.url", "$sonarServer"
	  property "sonar.jdbc.url", "$sonarJdbc"
	  property "sonar.projectName", "$sonarProject"
      property "sonar.projectVersion", "$sonarProjectVersion"
    }
}
subprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'properties'
  idea {
    project {
      ext.languageLevel = '1.7'
      ext.jdkName = '1.7'
    }
  }

  sonarRunner {
    sonarProperties {
	  property "sonar.junit.reportsPath", "$buildDir/test-results/"
	  property "sonar.java.coveragePlugin", "cobertura"
	  property "sonar.cobertura.reportPath", "$buildDir/reports/cobertura/coverage.xml"
    }
  }

  [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

  repositories {
    mavenCentral()
    maven {
      url "http://repo.springsource.org/plugins-release/"
    }
    maven { url "http://repo.spring.io/release" }
    maven { url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/" }
    maven { url "http://jasperreports.sourceforge.net/maven2/" }
  }
  dependencies {
    compile 'cglib:cglib:3.1',
        'org.aspectj:aspectjrt:1.8.5',

        'org.springframework:spring-webmvc:4.1.5.RELEASE',
        'org.springframework:spring-core:4.1.5.RELEASE',
        'org.springframework:spring-web:4.1.5.RELEASE',
        'org.springframework:spring-aspects:4.1.5.RELEASE',
        'org.springframework:spring-messaging:4.1.5.RELEASE',
        'org.springframework:spring-context-support:4.1.5.RELEASE',
        'org.springframework:spring-tx:4.1.5.RELEASE',

        'org.springframework.security:spring-security-taglibs:3.2.6.RELEASE',
        'org.springframework.security:spring-security-core:3.2.6.RELEASE',
        'org.springframework.security:spring-security-web:3.2.6.RELEASE',
        'org.springframework.security:spring-security-config:3.2.6.RELEASE',

        'org.springframework.integration:spring-integration-core:4.1.2.RELEASE',
        'org.springframework.integration:spring-integration-jdbc:4.1.2.RELEASE',
        'org.springframework.integration:spring-integration-ftp:4.1.2.RELEASE',

        'xml-apis:xml-apis:2.0.2',
        'commons-collections:commons-collections:3.2.1',
        'org.apache.commons:commons-collections4:4.0',
        'javax.servlet:javax.servlet-api:3.1.0',

        'org.projectlombok:lombok:1.16.2',

        'com.fasterxml.jackson.core:jackson-databind:2.5.1',
        'com.fasterxml.jackson.core:jackson-core:2.5.1',
        'com.fasterxml.jackson.core:jackson-annotations:2.5.1',

        'javax.mail:javax.mail-api:1.5.2',
        'com.sun.mail:javax.mail:1.5.2',

        'commons-codec:commons-codec:1.10',
        'commons-lang:commons-lang:2.6',
        'commons-io:commons-io:2.4'

    testCompile 'junit:junit:4.12',
        'org.mockito:mockito-core:1.10.19',
        'org.hamcrest:hamcrest-all:1.3',
        'cglib:cglib-nodep:3.1',
        'org.powermock:powermock-module-junit4-rule-agent:1.6.2',
        'org.powermock:powermock-module-junit4-rule:1.6.2',
            'org.powermock:powermock-classloading-xstream:1.6.2',
        'org.powermock:powermock-module-junit4:1.6.2',
        'org.powermock:powermock-api-mockito:1.6.2',
        'com.natpryce:make-it-easy:3.1.0',
        'org.springframework:spring-test:4.1.5.RELEASE'
  }

  test {
    jvmArgs '-XX:-UseSplitVerifier', '-XX:MaxPermSize=256m'
    System.properties.get('environmentName', 'local')
    systemProperties System.properties
    useJUnit {
      includeCategories 'org.openlmis.db.categories.UnitTests'
      //includeCategories 'org.openlmis.db.categories.IntegrationTests'  //TODO: execute IntegrationTest in pipeline
    }
    testLogging {
      events "passed", "skipped", "failed"
    }
  }

  task showMeCache << {
    configurations.compile.each { println it}
  }

  task IntegrationTests(type: Test) {
    jvmArgs '-XX:-UseSplitVerifier', '-XX:MaxPermSize=256m'
    System.properties.get('environmentName', 'local')
    systemProperties System.properties
    useJUnit {
      includeCategories 'org.openlmis.db.categories.IntegrationTests'
    }
    testLogging {
      events "passed", "skipped", "failed"
    }
  }
}

configure(subprojects.findAll { it.name != 'db' }) {
  dependencies {
    testCompile project (path: ':modules:db', configuration: 'testFixtures')
  }
}

allprojects {
 task downloadDependencies {
   description "Pre-downloads *most* dependencies"
   doLast {
     configurations.getAsMap().each { name, config ->
       println "Retrieving dependencies for $name"
       try {
         config.files
       } catch (e) {
         project.logger.info e.message // some cannot be resolved, silentlyish skip them
       }
     }
   }
 }
}
