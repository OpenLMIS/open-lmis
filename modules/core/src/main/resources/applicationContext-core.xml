<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This program is part of the OpenLMIS logistics management information system platform software.
  ~ Copyright © 2013 VillageReach
  ~
  ~ This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
  ~  
  ~ This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.
  ~ You should have received a copy of the GNU Affero General Public License along with this program.  If not, see http://www.gnu.org/licenses.  For additional information contact info@OpenLMIS.org. 
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:int-ftp="http://www.springframework.org/schema/integration/ftp"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/integration/ftp http://www.springframework.org/schema/integration/ftp/spring-integration-ftp.xsd">

    <context:annotation-config/>
    <context:spring-configured/>

    <context:component-scan base-package="org.openlmis.core"/>

    <import resource="classpath*:applicationContext-db.xml"/>
    <import resource="classpath*:applicationContext-email.xml"/>
    <import resource="classpath*:applicationContext-upload.xml"/>
    <import resource="classpath*:openLmisAtomFeedContext.xml"/>

    <bean id="messageSource" class="org.openlmis.core.message.ExposedMessageSourceImpl" autowire="byName">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="basename" value="classpath:messages" />
    </bean>

    <bean id="budgetFtpSessionFactory"
          class="org.springframework.integration.ftp.session.DefaultFtpSessionFactory">
        <property name="host" value="${budget.ftp.server.host}"/>
        <property name="port" value="${budget.ftp.server.port}"/>
        <property name="username" value="${budget.ftp.server.username}"/>
        <property name="password" value="${budget.ftp.server.password}"/>
        <property name="clientMode" value="0"/>
        <property name="fileType" value="2"/>
        <property name="bufferSize" value="100000"/>
    </bean>

    <int-ftp:inbound-channel-adapter cache-sessions="false"
                                     channel="budgetFtpInputChannel"
                                     session-factory="budgetFtpSessionFactory"
                                     filename-pattern="*.csv"
                                     auto-create-local-directory="true"
                                     delete-remote-files="true"
                                     remote-directory="${budget.ftp.remote.directory}"
                                     local-directory="${budget.ftp.local.directory}">
        <int:poller fixed-rate="${budget.ftp.task.interval}" max-messages-per-poll="-1" task-executor=""/>
    </int-ftp:inbound-channel-adapter>

    <int:channel id="budgetFtpErrorChannel"/>

    <int-ftp:outbound-channel-adapter cache-sessions="false"
                                      channel="budgetFtpErrorChannel"
                                      remote-directory="${budget.ftp.remote.error.directory}"
                                      session-factory="budgetFtpSessionFactory"
                                      auto-create-directory="true"
                                      temporary-file-suffix="temp"
                                      remote-filename-generator-expression="'error_'+ payload.name"/>

    <int:channel id="budgetFtpArchiveOutputChannel"/>

    <int-ftp:outbound-channel-adapter cache-sessions="false"
                                      channel="budgetFtpArchiveOutputChannel"
                                      remote-directory="${budget.ftp.remote.archive.directory}"
                                      session-factory="budgetFtpSessionFactory"
                                      auto-create-directory="true"
                                      temporary-file-suffix="temp"
                                      remote-filename-generator-expression="payload.name"/>


    <int:outbound-channel-adapter channel="budgetFtpInputChannel" ref="budgetFileProcessor" method="process"/>

    <bean id="messageDispatcher" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="1"/>
        <property name="maxPoolSize" value="1"/>
        <property name="queueCapacity" value="-1"/>
    </bean>

    <int:channel id="budgetFtpInputChannel">
        <int:dispatcher task-executor="messageDispatcher"/>
    </int:channel>

</beans>