/*  * Electronic Logistics Management Information System (eLMIS) is a supply chain management system for health commodities in a developing country setting.  *  * Copyright (C) 2015  John Snow, Inc (JSI). This program was produced for the U.S. Agency for International Development (USAID). It was prepared under the USAID | DELIVER PROJECT, Task Order 4.  *  * This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.  *  * You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

configurations {
    flyway
    classpath
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.1.1',
            'com.googlecode.flyway:flyway-core:1.7',
            'com.googlecode.flyway:flyway-ant:1.7',
            project(':modules:db')

    flyway 'com.googlecode.flyway:flyway-ant:1.7',
            'postgresql:postgresql:9.1-901.jdbc4'
    classpath 'postgresql:postgresql:9.1-901.jdbc4'

    configurations {
        testFixtures {
            extendsFrom testRuntime
        }
    }

    task testJar(type: Jar) {
        from sourceSets.test.output
        classifier = 'test'
    }

    artifacts {
        jar
        testFixtures testJar
    }
}

task setupExtensions() << {
    ext.flyway_classpath = files(configurations.flyway)
    ant.taskdef(name: 'flywayInit', classname: 'com.googlecode.flyway.ant.InitTask', classpath: ext.flyway_classpath.asPath)
    ant.flywayInit(driver: 'org.postgresql.Driver', url: "jdbc:postgresql://$databaseHostName:$databasePort/$dbName", user: dbUser, password: dbPassword, table: 'migration_schema_version'  )
    tasks.migrateExtensions.execute()
}

jar.doFirst {
    tasks.migrateExtensions.execute()
}

task migrateExtensions() << {
    println("Migrating database extensions")
    ext.flyway_classpath = files(sourceSets.main.resources.srcDirs) + files(configurations.flyway)
    ant.taskdef(name: 'flywayMigrate', classname: 'com.googlecode.flyway.ant.MigrateTask', classpath: ext.flyway_classpath.asPath)
    ant.taskdef(name: 'flywayInit', classname: 'com.googlecode.flyway.ant.InitTask', classpath: ext.flyway_classpath.asPath)
    ant.flywayMigrate( driver: 'org.postgresql.Driver', url: "jdbc:postgresql://$databaseHostName:$databasePort/$dbName", user: dbUser, password: dbPassword, table: 'migration_schema_version', baseDir: sourceSets.main.resources.srcDirs , basePackage: sourceSets.main.resources.srcDirs)
}



